version: '3.7'

services:
    db:
      container_name: postgres_12
      image: postgres:12
      environment:
        - POSTGRES_DB=mars
        - POSTGRES_USER=martian
        - POSTGRES_PASSWORD=thorgate
      volumes:
        - db-data:/var/lib/postgresql/data

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3.8.18-management-alpine
        ports:
          #- "5672:5672" # no need to expose to host
          - "15692:15672"
        volumes:
          - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
          - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
          #- ./configs/rabbitmq.conf:/etc/rabbitmq/
        environment:
          - RABBITMQ_DEFAULT_USER=admin
          - RABBITMQ_DEFAULT_PASS=admin
    api:
      container_name: api
      working_dir: /app
      build: ./terra-mars-api
      command: bash -c "python manage.py runserver 0.0.0.0:8000 & celery -A mars.celery  worker -l INFO"
      #command: bash -c "daphne -b 0.0.0.0 -p 8000 mars.asgi:application & celery -A mars.celery worker -l INFO"
      volumes:
        - ./terra-mars-api:/app
      ports:
        - "8000:8000"
      depends_on:
        - db
        - rabbitmq

    frontend:
        container_name: frontend
        working_dir: /terra-mars-spa
        build: ./terra-mars-spa
        volumes:
        - ./terra-mars-spa:/app
        ports:
         - "8080:80"
        depends_on:
            - api



volumes:
  db-data:
